version: "3.9"

x-producer:
  &producer
    build:
      context: .
      dockerfile: Dockerfile.producer
    restart: on-failure
    volumes:
      - ./producer:/app
    networks:
      - kafka-network
    depends_on:
      - zookeeper
      - kafka

x-consumer:
  &consumer
    build:
      context: .
      dockerfile: Dockerfile.consumer
    restart: unless-stopped
    volumes:
      - ./consumer:/app
    networks:
      - kafka-network
    depends_on:
      - zookeeper
      - kafka

services:
  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - kafka-network
    depends_on:
      - zookeeper
      - kafka
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    expose:
     - 2181
    networks:
      - kafka-network
  kafka:
    image: wurstmeister/kafka
    ports:
     - 9092:9092
    expose:
     - 9093
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: sync_data:1:1,async_data:1:1
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafka-network
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  sync_producer:
    <<: *producer
    command: "python3 /app/main.py"
    environment:
      KAFKA_TOPIC: sync_data
      KAFKA_BOOTSTRAP_SERVER: kafka:9093

  sync_consumer:
    <<: *consumer
    command: "python3 /app/main.py"
    environment:
      KAFKA_TOPIC: sync_data
      KAFKA_BOOTSTRAP_SERVER: kafka:9093

  async_producer:
    <<: *producer
    command: "python3 /app/amain.py"
    environment:
      KAFKA_TOPIC: async_data
      KAFKA_BOOTSTRAP_SERVER: kafka:9093
      
  async_consumer:
    <<: *consumer
    command: "python3 /app/amain.py"
    environment:
      KAFKA_TOPIC: async_data
      KAFKA_BOOTSTRAP_SERVER: kafka:9093
networks:
  kafka-network:
