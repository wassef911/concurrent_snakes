version: "3.9"

x-app:
  &producer
    build:
      context: .
      dockerfile: Dockerfile.producer
    restart: on-failure
    volumes:
      - ./producer:/app
    networks:
      - kafka-network
    depends_on:
      - zookeeper
      - kafka


services:
  kafka:
    image: confluentinc/cp-kafka:6.2.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: sync_data:1:1,async_data:1:1
    networks:
      - kafka-network
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "zkCli.sh", "-server", "localhost:2181", "ls", "/"]
      interval: 10s
      timeout: 5s
      retries: 5

  sync_producer:
    <<: *producer
    command: "python3 /app/main.py"
    environment:
      KAFKA_TOPIC: sync_data
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      
  async_producer:
    <<: *producer
    command: "python3 /app/amain.py"
    environment:
      KAFKA_TOPIC: async_data
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
networks:
  kafka-network:
